{"ast":null,"code":"var _jsxFileName = \"/Users/pragneshpatel/Documents/GVP/Hackthon/expense-tracker/client/src/components/SmartFeatures.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SmartFeatures = ({\n  expenses,\n  onAddExpense\n}) => {\n  _s();\n  const [smartSuggestions, setSmartSuggestions] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [autoCategories, setAutoCategories] = useState({});\n  const [receiptText, setReceiptText] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Smart categorization suggestions\n  const generateCategorySuggestions = description => {\n    const keywords = {\n      Food: [\"restaurant\", \"food\", \"lunch\", \"dinner\", \"coffee\", \"pizza\", \"burger\", \"grocery\"],\n      Transportation: [\"uber\", \"taxi\", \"gas\", \"fuel\", \"parking\", \"metro\", \"bus\", \"train\"],\n      Shopping: [\"amazon\", \"store\", \"mall\", \"clothes\", \"shirt\", \"shoes\", \"electronics\"],\n      Entertainment: [\"movie\", \"cinema\", \"game\", \"music\", \"concert\", \"theater\", \"netflix\"],\n      Healthcare: [\"doctor\", \"medicine\", \"pharmacy\", \"hospital\", \"dentist\", \"clinic\"],\n      Utilities: [\"electricity\", \"water\", \"internet\", \"phone\", \"cable\", \"wifi\"],\n      Education: [\"book\", \"course\", \"school\", \"university\", \"tuition\", \"learning\"]\n    };\n    const desc = description.toLowerCase();\n    for (const [category, words] of Object.entries(keywords)) {\n      if (words.some(word => desc.includes(word))) {\n        return category;\n      }\n    }\n    return \"Other\";\n  };\n\n  // Mock OCR Receipt Processing\n  const processReceipt = async () => {\n    setIsProcessing(true);\n\n    // Simulate AI processing delay\n    await new Promise(resolve => setTimeout(resolve, 2000));\n\n    // Mock parsed receipt data\n    const mockReceiptData = [{\n      description: \"Coffee Latte\",\n      amount: 4.5,\n      category: \"Food\"\n    }, {\n      description: \"Blueberry Muffin\",\n      amount: 2.75,\n      category: \"Food\"\n    }, {\n      description: \"Parking Fee\",\n      amount: 3.0,\n      category: \"Transportation\"\n    }];\n    setIsProcessing(false);\n    return mockReceiptData;\n  };\n\n  // Detect recurring expenses\n  const detectRecurringExpenses = () => {\n    const recurring = [];\n    const expenseGroups = {};\n    expenses.forEach(expense => {\n      const key = expense.description.toLowerCase().trim();\n      if (!expenseGroups[key]) {\n        expenseGroups[key] = [];\n      }\n      expenseGroups[key].push(expense);\n    });\n    Object.entries(expenseGroups).forEach(([description, expenseList]) => {\n      if (expenseList.length >= 2) {\n        // Check if expenses are roughly regular\n        const amounts = expenseList.map(e => e.amount);\n        const avgAmount = amounts.reduce((a, b) => a + b, 0) / amounts.length;\n        const isConsistentAmount = amounts.every(amount => Math.abs(amount - avgAmount) / avgAmount < 0.1);\n        if (isConsistentAmount) {\n          recurring.push({\n            description,\n            frequency: expenseList.length,\n            avgAmount: avgAmount,\n            lastDate: Math.max(...expenseList.map(e => new Date(e.date)))\n          });\n        }\n      }\n    });\n    return recurring;\n  };\n\n  // Generate smart suggestions\n  const generateSmartSuggestions = () => {\n    const suggestions = [];\n    const totalSpent = expenses.reduce((sum, exp) => sum + exp.amount, 0);\n\n    // Budget suggestions\n    if (totalSpent > 0) {\n      const categoryTotals = {};\n      expenses.forEach(exp => {\n        categoryTotals[exp.category] = (categoryTotals[exp.category] || 0) + exp.amount;\n      });\n      const topCategory = Object.entries(categoryTotals).sort(([, a], [, b]) => b - a)[0];\n      if (topCategory && topCategory[1] > totalSpent * 0.4) {\n        suggestions.push({\n          type: \"budget\",\n          icon: \"ðŸ’°\",\n          title: \"Budget Recommendation\",\n          message: `Consider setting a monthly budget of $${Math.ceil(topCategory[1] * 1.1)} for ${topCategory[0]}`,\n          action: \"Set Budget\"\n        });\n      }\n    }\n\n    // Savings suggestions\n    const recentExpenses = expenses.filter(exp => new Date(exp.date) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n    if (recentExpenses.length > 0) {\n      const weeklyTotal = recentExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n      const potentialSavings = weeklyTotal * 0.15;\n      suggestions.push({\n        type: \"savings\",\n        icon: \"ðŸŽ¯\",\n        title: \"Savings Opportunity\",\n        message: `You could save $${potentialSavings.toFixed(2)} per week by reducing non-essential spending by 15%`,\n        action: \"View Tips\"\n      });\n    }\n\n    // Recurring expense alerts\n    const recurring = detectRecurringExpenses();\n    if (recurring.length > 0) {\n      suggestions.push({\n        type: \"recurring\",\n        icon: \"ðŸ”„\",\n        title: \"Recurring Expenses Detected\",\n        message: `Found ${recurring.length} recurring expenses. Set up automatic tracking?`,\n        action: \"Setup Auto-Track\"\n      });\n    }\n    return suggestions;\n  };\n\n  // Generate spending alerts\n  const generateNotifications = () => {\n    const notifications = [];\n    const today = new Date();\n    const todayExpenses = expenses.filter(exp => {\n      const expDate = new Date(exp.date);\n      return expDate.toDateString() === today.toDateString();\n    });\n    const todayTotal = todayExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n    if (todayTotal > 100) {\n      notifications.push({\n        type: \"warning\",\n        title: \"High Daily Spending\",\n        message: `You've spent $${todayTotal.toFixed(2)} today`,\n        timestamp: new Date().toLocaleTimeString()\n      });\n    }\n\n    // Weekend spending pattern\n    const isWeekend = today.getDay() === 0 || today.getDay() === 6;\n    if (isWeekend && todayTotal > 50) {\n      notifications.push({\n        type: \"info\",\n        title: \"Weekend Spending\",\n        message: \"Remember your weekend budget goal!\",\n        timestamp: new Date().toLocaleTimeString()\n      });\n    }\n    return notifications;\n  };\n  useEffect(() => {\n    setSmartSuggestions(generateSmartSuggestions());\n    setNotifications(generateNotifications());\n  }, [expenses]);\n  const handleReceiptUpload = async () => {\n    const parsedExpenses = await processReceipt();\n\n    // Auto-add parsed expenses with smart categorization\n    parsedExpenses.forEach(expense => {\n      const smartCategory = generateCategorySuggestions(expense.description);\n      onAddExpense({\n        ...expense,\n        category: smartCategory,\n        userId: \"1\" // Assuming current user\n      });\n    });\n    setReceiptText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"smart-features\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDD16 Smart Features\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card receipt-ocr\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCF7 Smart Receipt Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"receipt-scanner\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Paste receipt text here or click 'Simulate Receipt Scan' to demo AI parsing...\",\n          value: receiptText,\n          onChange: e => setReceiptText(e.target.value),\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scanner-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReceiptUpload,\n            disabled: isProcessing,\n            className: \"scan-btn\",\n            children: isProcessing ? \"ðŸ”„ Processing...\" : \"ðŸŽ¯ Simulate Receipt Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCA1 Smart Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-list\",\n        children: smartSuggestions.length > 0 ? smartSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `suggestion ${suggestion.type}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"suggestion-icon\",\n              children: suggestion.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: suggestion.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: suggestion.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-action\",\n              children: suggestion.action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add more expenses to get personalized suggestions!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD14 Smart Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-list\",\n        children: notifications.length > 0 ? notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification ${notification.type}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: notification.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: notification.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification success\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"All Good! \\u2705\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: new Date().toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your spending is on track today.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card auto-categorization\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDFAF Smart Categorization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-demo\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Our AI automatically categorizes your expenses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-examples\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-text\",\n              children: \"\\\"Starbucks Coffee\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-arrow\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-category food\",\n              children: \"Food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-text\",\n              children: \"\\\"Uber ride downtown\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-arrow\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-category transport\",\n              children: \"Transportation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-text\",\n              children: \"\\\"Netflix subscription\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-arrow\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"example-category entertainment\",\n              children: \"Entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card recurring-detection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD04 Recurring Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recurring-list\",\n        children: detectRecurringExpenses().length > 0 ? detectRecurringExpenses().map((recurring, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recurring-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recurring-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: recurring.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"recurring-stats\",\n              children: [\"$\", recurring.avgAmount.toFixed(2), \" \\u2022 \", recurring.frequency, \" \", \"times\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"setup-auto-btn\",\n            children: \"Setup Auto-Track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recurring expenses detected yet. Add more data to see patterns!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(SmartFeatures, \"u7Pp8k2WjvzT749UjNABDet8cqM=\");\n_c = SmartFeatures;\nexport default SmartFeatures;\nvar _c;\n$RefreshReg$(_c, \"SmartFeatures\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SmartFeatures","expenses","onAddExpense","_s","smartSuggestions","setSmartSuggestions","notifications","setNotifications","autoCategories","setAutoCategories","receiptText","setReceiptText","isProcessing","setIsProcessing","generateCategorySuggestions","description","keywords","Food","Transportation","Shopping","Entertainment","Healthcare","Utilities","Education","desc","toLowerCase","category","words","Object","entries","some","word","includes","processReceipt","Promise","resolve","setTimeout","mockReceiptData","amount","detectRecurringExpenses","recurring","expenseGroups","forEach","expense","key","trim","push","expenseList","length","amounts","map","e","avgAmount","reduce","a","b","isConsistentAmount","every","Math","abs","frequency","lastDate","max","Date","date","generateSmartSuggestions","suggestions","totalSpent","sum","exp","categoryTotals","topCategory","sort","type","icon","title","message","ceil","action","recentExpenses","filter","now","weeklyTotal","potentialSavings","toFixed","generateNotifications","today","todayExpenses","expDate","toDateString","todayTotal","timestamp","toLocaleTimeString","isWeekend","getDay","handleReceiptUpload","parsedExpenses","smartCategory","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","rows","onClick","disabled","suggestion","index","notification","_c","$RefreshReg$"],"sources":["/Users/pragneshpatel/Documents/GVP/Hackthon/expense-tracker/client/src/components/SmartFeatures.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst SmartFeatures = ({ expenses, onAddExpense }) => {\n  const [smartSuggestions, setSmartSuggestions] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [autoCategories, setAutoCategories] = useState({});\n  const [receiptText, setReceiptText] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Smart categorization suggestions\n  const generateCategorySuggestions = (description) => {\n    const keywords = {\n      Food: [\n        \"restaurant\",\n        \"food\",\n        \"lunch\",\n        \"dinner\",\n        \"coffee\",\n        \"pizza\",\n        \"burger\",\n        \"grocery\",\n      ],\n      Transportation: [\n        \"uber\",\n        \"taxi\",\n        \"gas\",\n        \"fuel\",\n        \"parking\",\n        \"metro\",\n        \"bus\",\n        \"train\",\n      ],\n      Shopping: [\n        \"amazon\",\n        \"store\",\n        \"mall\",\n        \"clothes\",\n        \"shirt\",\n        \"shoes\",\n        \"electronics\",\n      ],\n      Entertainment: [\n        \"movie\",\n        \"cinema\",\n        \"game\",\n        \"music\",\n        \"concert\",\n        \"theater\",\n        \"netflix\",\n      ],\n      Healthcare: [\n        \"doctor\",\n        \"medicine\",\n        \"pharmacy\",\n        \"hospital\",\n        \"dentist\",\n        \"clinic\",\n      ],\n      Utilities: [\"electricity\", \"water\", \"internet\", \"phone\", \"cable\", \"wifi\"],\n      Education: [\n        \"book\",\n        \"course\",\n        \"school\",\n        \"university\",\n        \"tuition\",\n        \"learning\",\n      ],\n    };\n\n    const desc = description.toLowerCase();\n    for (const [category, words] of Object.entries(keywords)) {\n      if (words.some((word) => desc.includes(word))) {\n        return category;\n      }\n    }\n    return \"Other\";\n  };\n\n  // Mock OCR Receipt Processing\n  const processReceipt = async () => {\n    setIsProcessing(true);\n\n    // Simulate AI processing delay\n    await new Promise((resolve) => setTimeout(resolve, 2000));\n\n    // Mock parsed receipt data\n    const mockReceiptData = [\n      { description: \"Coffee Latte\", amount: 4.5, category: \"Food\" },\n      { description: \"Blueberry Muffin\", amount: 2.75, category: \"Food\" },\n      { description: \"Parking Fee\", amount: 3.0, category: \"Transportation\" },\n    ];\n\n    setIsProcessing(false);\n    return mockReceiptData;\n  };\n\n  // Detect recurring expenses\n  const detectRecurringExpenses = () => {\n    const recurring = [];\n    const expenseGroups = {};\n\n    expenses.forEach((expense) => {\n      const key = expense.description.toLowerCase().trim();\n      if (!expenseGroups[key]) {\n        expenseGroups[key] = [];\n      }\n      expenseGroups[key].push(expense);\n    });\n\n    Object.entries(expenseGroups).forEach(([description, expenseList]) => {\n      if (expenseList.length >= 2) {\n        // Check if expenses are roughly regular\n        const amounts = expenseList.map((e) => e.amount);\n        const avgAmount = amounts.reduce((a, b) => a + b, 0) / amounts.length;\n        const isConsistentAmount = amounts.every(\n          (amount) => Math.abs(amount - avgAmount) / avgAmount < 0.1\n        );\n\n        if (isConsistentAmount) {\n          recurring.push({\n            description,\n            frequency: expenseList.length,\n            avgAmount: avgAmount,\n            lastDate: Math.max(...expenseList.map((e) => new Date(e.date))),\n          });\n        }\n      }\n    });\n\n    return recurring;\n  };\n\n  // Generate smart suggestions\n  const generateSmartSuggestions = () => {\n    const suggestions = [];\n    const totalSpent = expenses.reduce((sum, exp) => sum + exp.amount, 0);\n\n    // Budget suggestions\n    if (totalSpent > 0) {\n      const categoryTotals = {};\n      expenses.forEach((exp) => {\n        categoryTotals[exp.category] =\n          (categoryTotals[exp.category] || 0) + exp.amount;\n      });\n\n      const topCategory = Object.entries(categoryTotals).sort(\n        ([, a], [, b]) => b - a\n      )[0];\n\n      if (topCategory && topCategory[1] > totalSpent * 0.4) {\n        suggestions.push({\n          type: \"budget\",\n          icon: \"ðŸ’°\",\n          title: \"Budget Recommendation\",\n          message: `Consider setting a monthly budget of $${Math.ceil(\n            topCategory[1] * 1.1\n          )} for ${topCategory[0]}`,\n          action: \"Set Budget\",\n        });\n      }\n    }\n\n    // Savings suggestions\n    const recentExpenses = expenses.filter(\n      (exp) =>\n        new Date(exp.date) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n    );\n\n    if (recentExpenses.length > 0) {\n      const weeklyTotal = recentExpenses.reduce(\n        (sum, exp) => sum + exp.amount,\n        0\n      );\n      const potentialSavings = weeklyTotal * 0.15;\n\n      suggestions.push({\n        type: \"savings\",\n        icon: \"ðŸŽ¯\",\n        title: \"Savings Opportunity\",\n        message: `You could save $${potentialSavings.toFixed(\n          2\n        )} per week by reducing non-essential spending by 15%`,\n        action: \"View Tips\",\n      });\n    }\n\n    // Recurring expense alerts\n    const recurring = detectRecurringExpenses();\n    if (recurring.length > 0) {\n      suggestions.push({\n        type: \"recurring\",\n        icon: \"ðŸ”„\",\n        title: \"Recurring Expenses Detected\",\n        message: `Found ${recurring.length} recurring expenses. Set up automatic tracking?`,\n        action: \"Setup Auto-Track\",\n      });\n    }\n\n    return suggestions;\n  };\n\n  // Generate spending alerts\n  const generateNotifications = () => {\n    const notifications = [];\n    const today = new Date();\n    const todayExpenses = expenses.filter((exp) => {\n      const expDate = new Date(exp.date);\n      return expDate.toDateString() === today.toDateString();\n    });\n\n    const todayTotal = todayExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n\n    if (todayTotal > 100) {\n      notifications.push({\n        type: \"warning\",\n        title: \"High Daily Spending\",\n        message: `You've spent $${todayTotal.toFixed(2)} today`,\n        timestamp: new Date().toLocaleTimeString(),\n      });\n    }\n\n    // Weekend spending pattern\n    const isWeekend = today.getDay() === 0 || today.getDay() === 6;\n    if (isWeekend && todayTotal > 50) {\n      notifications.push({\n        type: \"info\",\n        title: \"Weekend Spending\",\n        message: \"Remember your weekend budget goal!\",\n        timestamp: new Date().toLocaleTimeString(),\n      });\n    }\n\n    return notifications;\n  };\n\n  useEffect(() => {\n    setSmartSuggestions(generateSmartSuggestions());\n    setNotifications(generateNotifications());\n  }, [expenses]);\n\n  const handleReceiptUpload = async () => {\n    const parsedExpenses = await processReceipt();\n\n    // Auto-add parsed expenses with smart categorization\n    parsedExpenses.forEach((expense) => {\n      const smartCategory = generateCategorySuggestions(expense.description);\n      onAddExpense({\n        ...expense,\n        category: smartCategory,\n        userId: \"1\", // Assuming current user\n      });\n    });\n\n    setReceiptText(\"\");\n  };\n\n  return (\n    <div className=\"smart-features\">\n      <h2>ðŸ¤– Smart Features</h2>\n\n      {/* Receipt OCR Simulation */}\n      <div className=\"feature-card receipt-ocr\">\n        <h3>ðŸ“· Smart Receipt Scanner</h3>\n        <div className=\"receipt-scanner\">\n          <textarea\n            placeholder=\"Paste receipt text here or click 'Simulate Receipt Scan' to demo AI parsing...\"\n            value={receiptText}\n            onChange={(e) => setReceiptText(e.target.value)}\n            rows={4}\n          />\n          <div className=\"scanner-actions\">\n            <button\n              onClick={handleReceiptUpload}\n              disabled={isProcessing}\n              className=\"scan-btn\"\n            >\n              {isProcessing ? \"ðŸ”„ Processing...\" : \"ðŸŽ¯ Simulate Receipt Scan\"}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Smart Suggestions */}\n      <div className=\"feature-card suggestions\">\n        <h3>ðŸ’¡ Smart Suggestions</h3>\n        <div className=\"suggestions-list\">\n          {smartSuggestions.length > 0 ? (\n            smartSuggestions.map((suggestion, index) => (\n              <div key={index} className={`suggestion ${suggestion.type}`}>\n                <div className=\"suggestion-content\">\n                  <span className=\"suggestion-icon\">{suggestion.icon}</span>\n                  <div className=\"suggestion-text\">\n                    <strong>{suggestion.title}</strong>\n                    <p>{suggestion.message}</p>\n                  </div>\n                  <button className=\"suggestion-action\">\n                    {suggestion.action}\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p>Add more expenses to get personalized suggestions!</p>\n          )}\n        </div>\n      </div>\n\n      {/* Smart Notifications */}\n      <div className=\"feature-card notifications\">\n        <h3>ðŸ”” Smart Alerts</h3>\n        <div className=\"notifications-list\">\n          {notifications.length > 0 ? (\n            notifications.map((notification, index) => (\n              <div key={index} className={`notification ${notification.type}`}>\n                <div className=\"notification-content\">\n                  <div className=\"notification-header\">\n                    <strong>{notification.title}</strong>\n                    <span className=\"timestamp\">{notification.timestamp}</span>\n                  </div>\n                  <p>{notification.message}</p>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"notification success\">\n              <div className=\"notification-content\">\n                <div className=\"notification-header\">\n                  <strong>All Good! âœ…</strong>\n                  <span className=\"timestamp\">\n                    {new Date().toLocaleTimeString()}\n                  </span>\n                </div>\n                <p>Your spending is on track today.</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Auto-Categorization Display */}\n      <div className=\"feature-card auto-categorization\">\n        <h3>ðŸŽ¯ Smart Categorization</h3>\n        <div className=\"category-demo\">\n          <p>Our AI automatically categorizes your expenses:</p>\n          <div className=\"category-examples\">\n            <div className=\"category-example\">\n              <span className=\"example-text\">\"Starbucks Coffee\"</span>\n              <span className=\"example-arrow\">â†’</span>\n              <span className=\"example-category food\">Food</span>\n            </div>\n            <div className=\"category-example\">\n              <span className=\"example-text\">\"Uber ride downtown\"</span>\n              <span className=\"example-arrow\">â†’</span>\n              <span className=\"example-category transport\">Transportation</span>\n            </div>\n            <div className=\"category-example\">\n              <span className=\"example-text\">\"Netflix subscription\"</span>\n              <span className=\"example-arrow\">â†’</span>\n              <span className=\"example-category entertainment\">\n                Entertainment\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Recurring Expenses Detection */}\n      <div className=\"feature-card recurring-detection\">\n        <h3>ðŸ”„ Recurring Expenses</h3>\n        <div className=\"recurring-list\">\n          {detectRecurringExpenses().length > 0 ? (\n            detectRecurringExpenses().map((recurring, index) => (\n              <div key={index} className=\"recurring-item\">\n                <div className=\"recurring-info\">\n                  <strong>{recurring.description}</strong>\n                  <span className=\"recurring-stats\">\n                    ${recurring.avgAmount.toFixed(2)} â€¢ {recurring.frequency}{\" \"}\n                    times\n                  </span>\n                </div>\n                <button className=\"setup-auto-btn\">Setup Auto-Track</button>\n              </div>\n            ))\n          ) : (\n            <p>\n              No recurring expenses detected yet. Add more data to see patterns!\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SmartFeatures;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}