{"ast":null,"code":"var _jsxFileName = \"/Users/pragneshpatel/Documents/GVP/Hackthon/expense-tracker/client/src/components/FinancialIntelligence.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialIntelligence = ({\n  expenses\n}) => {\n  _s();\n  var _financialHealth$savi, _financialHealth$mont, _financialHealth$heal;\n  const [financialTips, setFinancialTips] = useState([]);\n  const [investmentSuggestions, setInvestmentSuggestions] = useState([]);\n  const [savingsGoals, setSavingsGoals] = useState([]);\n  const [financialHealth, setFinancialHealth] = useState({});\n\n  // Calculate financial health metrics\n  const calculateFinancialHealth = () => {\n    const totalSpent = expenses.reduce((sum, exp) => sum + exp.amount, 0);\n    const monthlySpending = totalSpent; // Assuming current month data\n\n    // Mock monthly income for calculations\n    const estimatedIncome = 5000; // This would come from user input in real app\n    const savingsRate = (estimatedIncome - monthlySpending) / estimatedIncome * 100;\n    const categorySpending = {};\n    expenses.forEach(exp => {\n      categorySpending[exp.category] = (categorySpending[exp.category] || 0) + exp.amount;\n    });\n\n    // Calculate financial ratios\n    const housingRatio = (categorySpending['Housing'] || 0) / estimatedIncome * 100;\n    const transportRatio = (categorySpending['Transportation'] || 0) / estimatedIncome * 100;\n    const foodRatio = (categorySpending['Food'] || 0) / estimatedIncome * 100;\n\n    // Generate health score\n    let healthScore = 100;\n    if (savingsRate < 20) healthScore -= 20;\n    if (housingRatio > 30) healthScore -= 15;\n    if (transportRatio > 15) healthScore -= 10;\n    if (foodRatio > 15) healthScore -= 10;\n    return {\n      savingsRate: Math.max(0, savingsRate),\n      housingRatio,\n      transportRatio,\n      foodRatio,\n      healthScore: Math.max(0, healthScore),\n      monthlySpending,\n      estimatedIncome\n    };\n  };\n\n  // Generate personalized financial tips\n  const generateFinancialTips = () => {\n    const health = calculateFinancialHealth();\n    const tips = [];\n\n    // Savings tips\n    if (health.savingsRate < 20) {\n      tips.push({\n        category: 'Savings',\n        icon: '💰',\n        priority: 'high',\n        title: 'Boost Your Savings Rate',\n        tip: 'Aim to save at least 20% of your income. Try the 50/30/20 rule: 50% needs, 30% wants, 20% savings.',\n        action: 'Create a savings plan'\n      });\n    }\n\n    // Category-specific tips\n    const categoryTips = {\n      'Food': {\n        icon: '🍽️',\n        tips: ['Meal prep on Sundays to reduce restaurant visits', 'Use grocery store apps for coupons and deals', 'Try cooking at home 5 days per week']\n      },\n      'Transportation': {\n        icon: '🚗',\n        tips: ['Consider carpooling or public transportation', 'Combine multiple errands into one trip', 'Look into bike-sharing for short distances']\n      },\n      'Entertainment': {\n        icon: '🎬',\n        tips: ['Look for free community events and activities', 'Share streaming subscriptions with family', 'Take advantage of happy hour deals']\n      },\n      'Shopping': {\n        icon: '🛍️',\n        tips: ['Wait 24 hours before making non-essential purchases', 'Use the envelope method for discretionary spending', 'Shop with a list to avoid impulse buys']\n      }\n    };\n\n    // Add category-specific tips based on highest spending\n    const categoryTotals = {};\n    expenses.forEach(exp => {\n      categoryTotals[exp.category] = (categoryTotals[exp.category] || 0) + exp.amount;\n    });\n    const topCategories = Object.entries(categoryTotals).sort(([, a], [, b]) => b - a).slice(0, 3);\n    topCategories.forEach(([category, amount]) => {\n      if (categoryTips[category]) {\n        const randomTip = categoryTips[category].tips[Math.floor(Math.random() * categoryTips[category].tips.length)];\n        tips.push({\n          category,\n          icon: categoryTips[category].icon,\n          priority: 'medium',\n          title: `${category} Optimization`,\n          tip: randomTip,\n          action: 'Set category budget'\n        });\n      }\n    });\n\n    // General financial wellness tips\n    tips.push({\n      category: 'General',\n      icon: '📊',\n      priority: 'low',\n      title: 'Track Your Progress',\n      tip: 'Review your expenses weekly to stay on track with your financial goals.',\n      action: 'Set up weekly review'\n    });\n    return tips;\n  };\n\n  // Generate investment suggestions\n  const generateInvestmentSuggestions = () => {\n    const health = calculateFinancialHealth();\n    const suggestions = [];\n    if (health.savingsRate > 15) {\n      suggestions.push({\n        type: 'Emergency Fund',\n        icon: '🏦',\n        priority: 'high',\n        title: 'Build Emergency Fund',\n        description: 'Start with $1,000, then work towards 3-6 months of expenses',\n        amount: Math.min(1000, health.monthlySpending * 3),\n        risk: 'Low',\n        timeframe: '3-6 months'\n      });\n      suggestions.push({\n        type: 'Index Funds',\n        icon: '📈',\n        priority: 'medium',\n        title: 'Low-Cost Index Funds',\n        description: 'Diversified portfolio with low fees for long-term growth',\n        amount: health.monthlySpending * 0.1,\n        risk: 'Medium',\n        timeframe: '5+ years'\n      });\n      suggestions.push({\n        type: 'Retirement',\n        icon: '🏖️',\n        priority: 'high',\n        title: '401(k) or IRA',\n        description: 'Take advantage of tax benefits and compound growth',\n        amount: health.estimatedIncome * 0.15,\n        risk: 'Medium',\n        timeframe: '20+ years'\n      });\n    }\n    if (health.savingsRate > 25) {\n      suggestions.push({\n        type: 'Real Estate',\n        icon: '🏠',\n        priority: 'medium',\n        title: 'Real Estate Investment',\n        description: 'Consider REITs for real estate exposure without direct ownership',\n        amount: health.monthlySpending * 0.2,\n        risk: 'Medium-High',\n        timeframe: '10+ years'\n      });\n    }\n    return suggestions;\n  };\n\n  // Generate savings goals\n  const generateSavingsGoals = () => {\n    const health = calculateFinancialHealth();\n    const goals = [{\n      title: 'Emergency Fund',\n      target: health.monthlySpending * 6,\n      current: health.monthlySpending * 0.5,\n      // Mock current savings\n      priority: 'high',\n      timeframe: '12 months',\n      icon: '🛡️'\n    }, {\n      title: 'Vacation Fund',\n      target: 3000,\n      current: 500,\n      priority: 'medium',\n      timeframe: '8 months',\n      icon: '✈️'\n    }, {\n      title: 'New Car',\n      target: 25000,\n      current: 2000,\n      priority: 'low',\n      timeframe: '24 months',\n      icon: '🚗'\n    }];\n    return goals.map(goal => ({\n      ...goal,\n      progress: goal.current / goal.target * 100,\n      monthlyRequired: (goal.target - goal.current) / parseInt(goal.timeframe)\n    }));\n  };\n  useEffect(() => {\n    setFinancialHealth(calculateFinancialHealth());\n    setFinancialTips(generateFinancialTips());\n    setInvestmentSuggestions(generateInvestmentSuggestions());\n    setSavingsGoals(generateSavingsGoals());\n  }, [expenses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"financial-intelligence\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCA1 Financial Intelligence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card health-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCA Financial Health Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"health-metrics\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Savings Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `metric-value ${financialHealth.savingsRate > 20 ? 'good' : 'warning'}`,\n            children: [(_financialHealth$savi = financialHealth.savingsRate) === null || _financialHealth$savi === void 0 ? void 0 : _financialHealth$savi.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Monthly Spending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: [\"$\", (_financialHealth$mont = financialHealth.monthlySpending) === null || _financialHealth$mont === void 0 ? void 0 : _financialHealth$mont.toFixed(0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Health Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `metric-value ${financialHealth.healthScore > 80 ? 'good' : financialHealth.healthScore > 60 ? 'warning' : 'alert'}`,\n            children: [(_financialHealth$heal = financialHealth.healthScore) === null || _financialHealth$heal === void 0 ? void 0 : _financialHealth$heal.toFixed(0), \"/100\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card financial-tips\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCB0 Personalized Tips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tips-list\",\n        children: financialTips.map((tip, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tip ${tip.priority}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tip-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tip-icon\",\n              children: tip.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tip-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: tip.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `priority-badge ${tip.priority}`,\n                children: tip.priority.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tip-content\",\n            children: tip.tip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tip-action\",\n            children: tip.action\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card investment-suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC8 Investment Opportunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"investments-grid\",\n        children: investmentSuggestions.map((investment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"investment-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"investment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"investment-icon\",\n              children: investment.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"investment-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: investment.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `risk-level ${investment.risk.toLowerCase().replace('-', '')}`,\n                children: [investment.risk, \" Risk\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"investment-description\",\n            children: investment.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"investment-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Suggested Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", investment.amount.toFixed(0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Time Horizon:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: investment.timeframe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"investment-action\",\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card savings-goals\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDFAF Savings Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals-list\",\n        children: savingsGoals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goal-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"goal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"goal-icon\",\n              children: goal.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"goal-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: goal.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"goal-timeframe\",\n                children: goal.timeframe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `goal-priority ${goal.priority}`,\n              children: goal.priority.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"goal-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${Math.min(100, goal.progress)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-text\",\n              children: [\"$\", goal.current.toFixed(0), \" / $\", goal.target.toFixed(0), \"(\", goal.progress.toFixed(1), \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"goal-action\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Monthly needed: $\", goal.monthlyRequired.toFixed(0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"adjust-goal-btn\",\n              children: \"Adjust Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-card financial-education\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCDA Financial Education\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"education-topics\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83C\\uDFE6 Emergency Fund Basics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Learn why you need 3-6 months of expenses saved for emergencies.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"learn-btn\",\n            children: \"Read Guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCCA Investment Fundamentals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Understand the basics of stocks, bonds, and diversification.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"learn-btn\",\n            children: \"Watch Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topic\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCB3 Credit Score Improvement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Tips to build and maintain a healthy credit score.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"learn-btn\",\n            children: \"Get Tips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(FinancialIntelligence, \"0WzrOs97usyM6xJT6nVj8PadoDI=\");\n_c = FinancialIntelligence;\nexport default FinancialIntelligence;\nvar _c;\n$RefreshReg$(_c, \"FinancialIntelligence\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FinancialIntelligence","expenses","_s","_financialHealth$savi","_financialHealth$mont","_financialHealth$heal","financialTips","setFinancialTips","investmentSuggestions","setInvestmentSuggestions","savingsGoals","setSavingsGoals","financialHealth","setFinancialHealth","calculateFinancialHealth","totalSpent","reduce","sum","exp","amount","monthlySpending","estimatedIncome","savingsRate","categorySpending","forEach","category","housingRatio","transportRatio","foodRatio","healthScore","Math","max","generateFinancialTips","health","tips","push","icon","priority","title","tip","action","categoryTips","categoryTotals","topCategories","Object","entries","sort","a","b","slice","randomTip","floor","random","length","generateInvestmentSuggestions","suggestions","type","description","min","risk","timeframe","generateSavingsGoals","goals","target","current","map","goal","progress","monthlyRequired","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","index","toUpperCase","investment","toLowerCase","replace","style","width","_c","$RefreshReg$"],"sources":["/Users/pragneshpatel/Documents/GVP/Hackthon/expense-tracker/client/src/components/FinancialIntelligence.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FinancialIntelligence = ({ expenses }) => {\n  const [financialTips, setFinancialTips] = useState([]);\n  const [investmentSuggestions, setInvestmentSuggestions] = useState([]);\n  const [savingsGoals, setSavingsGoals] = useState([]);\n  const [financialHealth, setFinancialHealth] = useState({});\n\n  // Calculate financial health metrics\n  const calculateFinancialHealth = () => {\n    const totalSpent = expenses.reduce((sum, exp) => sum + exp.amount, 0);\n    const monthlySpending = totalSpent; // Assuming current month data\n    \n    // Mock monthly income for calculations\n    const estimatedIncome = 5000; // This would come from user input in real app\n    const savingsRate = ((estimatedIncome - monthlySpending) / estimatedIncome) * 100;\n    \n    const categorySpending = {};\n    expenses.forEach(exp => {\n      categorySpending[exp.category] = (categorySpending[exp.category] || 0) + exp.amount;\n    });\n\n    // Calculate financial ratios\n    const housingRatio = (categorySpending['Housing'] || 0) / estimatedIncome * 100;\n    const transportRatio = (categorySpending['Transportation'] || 0) / estimatedIncome * 100;\n    const foodRatio = (categorySpending['Food'] || 0) / estimatedIncome * 100;\n\n    // Generate health score\n    let healthScore = 100;\n    if (savingsRate < 20) healthScore -= 20;\n    if (housingRatio > 30) healthScore -= 15;\n    if (transportRatio > 15) healthScore -= 10;\n    if (foodRatio > 15) healthScore -= 10;\n\n    return {\n      savingsRate: Math.max(0, savingsRate),\n      housingRatio,\n      transportRatio,\n      foodRatio,\n      healthScore: Math.max(0, healthScore),\n      monthlySpending,\n      estimatedIncome\n    };\n  };\n\n  // Generate personalized financial tips\n  const generateFinancialTips = () => {\n    const health = calculateFinancialHealth();\n    const tips = [];\n\n    // Savings tips\n    if (health.savingsRate < 20) {\n      tips.push({\n        category: 'Savings',\n        icon: '💰',\n        priority: 'high',\n        title: 'Boost Your Savings Rate',\n        tip: 'Aim to save at least 20% of your income. Try the 50/30/20 rule: 50% needs, 30% wants, 20% savings.',\n        action: 'Create a savings plan'\n      });\n    }\n\n    // Category-specific tips\n    const categoryTips = {\n      'Food': {\n        icon: '🍽️',\n        tips: [\n          'Meal prep on Sundays to reduce restaurant visits',\n          'Use grocery store apps for coupons and deals',\n          'Try cooking at home 5 days per week'\n        ]\n      },\n      'Transportation': {\n        icon: '🚗',\n        tips: [\n          'Consider carpooling or public transportation',\n          'Combine multiple errands into one trip',\n          'Look into bike-sharing for short distances'\n        ]\n      },\n      'Entertainment': {\n        icon: '🎬',\n        tips: [\n          'Look for free community events and activities',\n          'Share streaming subscriptions with family',\n          'Take advantage of happy hour deals'\n        ]\n      },\n      'Shopping': {\n        icon: '🛍️',\n        tips: [\n          'Wait 24 hours before making non-essential purchases',\n          'Use the envelope method for discretionary spending',\n          'Shop with a list to avoid impulse buys'\n        ]\n      }\n    };\n\n    // Add category-specific tips based on highest spending\n    const categoryTotals = {};\n    expenses.forEach(exp => {\n      categoryTotals[exp.category] = (categoryTotals[exp.category] || 0) + exp.amount;\n    });\n\n    const topCategories = Object.entries(categoryTotals)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 3);\n\n    topCategories.forEach(([category, amount]) => {\n      if (categoryTips[category]) {\n        const randomTip = categoryTips[category].tips[\n          Math.floor(Math.random() * categoryTips[category].tips.length)\n        ];\n        tips.push({\n          category,\n          icon: categoryTips[category].icon,\n          priority: 'medium',\n          title: `${category} Optimization`,\n          tip: randomTip,\n          action: 'Set category budget'\n        });\n      }\n    });\n\n    // General financial wellness tips\n    tips.push({\n      category: 'General',\n      icon: '📊',\n      priority: 'low',\n      title: 'Track Your Progress',\n      tip: 'Review your expenses weekly to stay on track with your financial goals.',\n      action: 'Set up weekly review'\n    });\n\n    return tips;\n  };\n\n  // Generate investment suggestions\n  const generateInvestmentSuggestions = () => {\n    const health = calculateFinancialHealth();\n    const suggestions = [];\n\n    if (health.savingsRate > 15) {\n      suggestions.push({\n        type: 'Emergency Fund',\n        icon: '🏦',\n        priority: 'high',\n        title: 'Build Emergency Fund',\n        description: 'Start with $1,000, then work towards 3-6 months of expenses',\n        amount: Math.min(1000, health.monthlySpending * 3),\n        risk: 'Low',\n        timeframe: '3-6 months'\n      });\n\n      suggestions.push({\n        type: 'Index Funds',\n        icon: '📈',\n        priority: 'medium',\n        title: 'Low-Cost Index Funds',\n        description: 'Diversified portfolio with low fees for long-term growth',\n        amount: health.monthlySpending * 0.1,\n        risk: 'Medium',\n        timeframe: '5+ years'\n      });\n\n      suggestions.push({\n        type: 'Retirement',\n        icon: '🏖️',\n        priority: 'high',\n        title: '401(k) or IRA',\n        description: 'Take advantage of tax benefits and compound growth',\n        amount: health.estimatedIncome * 0.15,\n        risk: 'Medium',\n        timeframe: '20+ years'\n      });\n    }\n\n    if (health.savingsRate > 25) {\n      suggestions.push({\n        type: 'Real Estate',\n        icon: '🏠',\n        priority: 'medium',\n        title: 'Real Estate Investment',\n        description: 'Consider REITs for real estate exposure without direct ownership',\n        amount: health.monthlySpending * 0.2,\n        risk: 'Medium-High',\n        timeframe: '10+ years'\n      });\n    }\n\n    return suggestions;\n  };\n\n  // Generate savings goals\n  const generateSavingsGoals = () => {\n    const health = calculateFinancialHealth();\n    const goals = [\n      {\n        title: 'Emergency Fund',\n        target: health.monthlySpending * 6,\n        current: health.monthlySpending * 0.5, // Mock current savings\n        priority: 'high',\n        timeframe: '12 months',\n        icon: '🛡️'\n      },\n      {\n        title: 'Vacation Fund',\n        target: 3000,\n        current: 500,\n        priority: 'medium',\n        timeframe: '8 months',\n        icon: '✈️'\n      },\n      {\n        title: 'New Car',\n        target: 25000,\n        current: 2000,\n        priority: 'low',\n        timeframe: '24 months',\n        icon: '🚗'\n      }\n    ];\n\n    return goals.map(goal => ({\n      ...goal,\n      progress: (goal.current / goal.target) * 100,\n      monthlyRequired: (goal.target - goal.current) / parseInt(goal.timeframe)\n    }));\n  };\n\n  useEffect(() => {\n    setFinancialHealth(calculateFinancialHealth());\n    setFinancialTips(generateFinancialTips());\n    setInvestmentSuggestions(generateInvestmentSuggestions());\n    setSavingsGoals(generateSavingsGoals());\n  }, [expenses]);\n\n  return (\n    <div className=\"financial-intelligence\">\n      <h2>💡 Financial Intelligence</h2>\n\n      {/* Financial Health Overview */}\n      <div className=\"feature-card health-overview\">\n        <h3>📊 Financial Health Overview</h3>\n        <div className=\"health-metrics\">\n          <div className=\"metric\">\n            <span className=\"metric-label\">Savings Rate</span>\n            <span className={`metric-value ${financialHealth.savingsRate > 20 ? 'good' : 'warning'}`}>\n              {financialHealth.savingsRate?.toFixed(1)}%\n            </span>\n          </div>\n          <div className=\"metric\">\n            <span className=\"metric-label\">Monthly Spending</span>\n            <span className=\"metric-value\">\n              ${financialHealth.monthlySpending?.toFixed(0)}\n            </span>\n          </div>\n          <div className=\"metric\">\n            <span className=\"metric-label\">Health Score</span>\n            <span className={`metric-value ${financialHealth.healthScore > 80 ? 'good' : financialHealth.healthScore > 60 ? 'warning' : 'alert'}`}>\n              {financialHealth.healthScore?.toFixed(0)}/100\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Personalized Financial Tips */}\n      <div className=\"feature-card financial-tips\">\n        <h3>💰 Personalized Tips</h3>\n        <div className=\"tips-list\">\n          {financialTips.map((tip, index) => (\n            <div key={index} className={`tip ${tip.priority}`}>\n              <div className=\"tip-header\">\n                <span className=\"tip-icon\">{tip.icon}</span>\n                <div className=\"tip-title\">\n                  <strong>{tip.title}</strong>\n                  <span className={`priority-badge ${tip.priority}`}>\n                    {tip.priority.toUpperCase()}\n                  </span>\n                </div>\n              </div>\n              <p className=\"tip-content\">{tip.tip}</p>\n              <button className=\"tip-action\">{tip.action}</button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Investment Suggestions */}\n      <div className=\"feature-card investment-suggestions\">\n        <h3>📈 Investment Opportunities</h3>\n        <div className=\"investments-grid\">\n          {investmentSuggestions.map((investment, index) => (\n            <div key={index} className=\"investment-card\">\n              <div className=\"investment-header\">\n                <span className=\"investment-icon\">{investment.icon}</span>\n                <div className=\"investment-info\">\n                  <strong>{investment.title}</strong>\n                  <span className={`risk-level ${investment.risk.toLowerCase().replace('-', '')}`}>\n                    {investment.risk} Risk\n                  </span>\n                </div>\n              </div>\n              <p className=\"investment-description\">{investment.description}</p>\n              <div className=\"investment-details\">\n                <div className=\"detail\">\n                  <span>Suggested Amount:</span>\n                  <span>${investment.amount.toFixed(0)}</span>\n                </div>\n                <div className=\"detail\">\n                  <span>Time Horizon:</span>\n                  <span>{investment.timeframe}</span>\n                </div>\n              </div>\n              <button className=\"investment-action\">Learn More</button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Savings Goals */}\n      <div className=\"feature-card savings-goals\">\n        <h3>🎯 Savings Goals</h3>\n        <div className=\"goals-list\">\n          {savingsGoals.map((goal, index) => (\n            <div key={index} className=\"goal-item\">\n              <div className=\"goal-header\">\n                <span className=\"goal-icon\">{goal.icon}</span>\n                <div className=\"goal-info\">\n                  <strong>{goal.title}</strong>\n                  <span className=\"goal-timeframe\">{goal.timeframe}</span>\n                </div>\n                <span className={`goal-priority ${goal.priority}`}>\n                  {goal.priority.toUpperCase()}\n                </span>\n              </div>\n              <div className=\"goal-progress\">\n                <div className=\"progress-bar\">\n                  <div \n                    className=\"progress-fill\"\n                    style={{ width: `${Math.min(100, goal.progress)}%` }}\n                  ></div>\n                </div>\n                <div className=\"progress-text\">\n                  ${goal.current.toFixed(0)} / ${goal.target.toFixed(0)} \n                  ({goal.progress.toFixed(1)}%)\n                </div>\n              </div>\n              <div className=\"goal-action\">\n                <span>Monthly needed: ${goal.monthlyRequired.toFixed(0)}</span>\n                <button className=\"adjust-goal-btn\">Adjust Goal</button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Financial Education */}\n      <div className=\"feature-card financial-education\">\n        <h3>📚 Financial Education</h3>\n        <div className=\"education-topics\">\n          <div className=\"topic\">\n            <h4>🏦 Emergency Fund Basics</h4>\n            <p>Learn why you need 3-6 months of expenses saved for emergencies.</p>\n            <button className=\"learn-btn\">Read Guide</button>\n          </div>\n          <div className=\"topic\">\n            <h4>📊 Investment Fundamentals</h4>\n            <p>Understand the basics of stocks, bonds, and diversification.</p>\n            <button className=\"learn-btn\">Watch Video</button>\n          </div>\n          <div className=\"topic\">\n            <h4>💳 Credit Score Improvement</h4>\n            <p>Tips to build and maintain a healthy credit score.</p>\n            <button className=\"learn-btn\">Get Tips</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialIntelligence;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}