{"ast":null,"code":"var _jsxFileName = \"/Users/pragneshpatel/Documents/GVP/Hackthon/expense-tracker/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin,\n  onSwitchToRegister\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: \"\"\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.email) {\n      newErrors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = \"Please enter a valid email address\";\n    }\n    if (!formData.password) {\n      newErrors.password = \"Password is required\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        email: formData.email.toLowerCase().trim(),\n        password: formData.password\n      });\n      if (response.data.success) {\n        // Store token in localStorage\n        localStorage.setItem(\"authToken\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\n        // Store in sessionStorage if not remembering\n        if (!rememberMe) {\n          sessionStorage.setItem(\"authToken\", response.data.token);\n          sessionStorage.setItem(\"user\", JSON.stringify(response.data.user));\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"user\");\n        }\n        onLogin(response.data.user, response.data.token);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.errors) {\n        // Handle validation errors\n        const validationErrors = {};\n        error.response.data.errors.forEach(err => {\n          validationErrors[err.field] = err.message;\n        });\n        setErrors(validationErrors);\n      } else {\n        var _error$response2, _error$response2$data;\n        setErrors({\n          general: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed. Please try again.\"\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDemoLogin = async () => {\n    setFormData({\n      email: \"demo@expensetracker.com\",\n      password: \"Demo123!\"\n    });\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        email: \"demo@expensetracker.com\",\n        password: \"Demo123!\"\n      });\n      if (response.data.success) {\n        localStorage.setItem(\"authToken\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n        onLogin(response.data.user, response.data.token);\n      }\n    } catch (error) {\n      // If demo account doesn't exist, create it\n      try {\n        await axios.post(\"/api/auth/register\", {\n          name: \"Demo User\",\n          email: \"demo@expensetracker.com\",\n          password: \"Demo123!\",\n          confirmPassword: \"Demo123!\",\n          currency: \"USD\"\n        });\n\n        // Now login with the created account\n        const loginResponse = await axios.post(\"/api/auth/login\", {\n          email: \"demo@expensetracker.com\",\n          password: \"Demo123!\"\n        });\n        if (loginResponse.data.success) {\n          localStorage.setItem(\"authToken\", loginResponse.data.token);\n          localStorage.setItem(\"user\", JSON.stringify(loginResponse.data.user));\n          onLogin(loginResponse.data.user, loginResponse.data.token);\n        }\n      } catch (createError) {\n        setErrors({\n          general: \"Demo account setup failed. Please try manual registration.\"\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u26A1 Expense Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Logging in...\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"demo-info\",\n        children: \"Demo: test@test.com / test123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"B0m4swUs522RDi7QAiKCV7Vdyyc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","onLogin","onSwitchToRegister","_s","formData","setFormData","email","password","isLoading","setIsLoading","errors","setErrors","showPassword","setShowPassword","rememberMe","setRememberMe","handleChange","e","name","value","target","prev","validateForm","newErrors","test","Object","keys","length","handleSubmit","preventDefault","response","post","toLowerCase","trim","data","success","localStorage","setItem","token","JSON","stringify","user","sessionStorage","removeItem","error","_error$response","_error$response$data","console","validationErrors","forEach","err","field","message","_error$response2","_error$response2$data","general","handleDemoLogin","confirmPassword","currency","loginResponse","createError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","setEmail","required","setPassword","disabled","loading","_c","$RefreshReg$"],"sources":["/Users/pragneshpatel/Documents/GVP/Hackthon/expense-tracker/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Login = ({ onLogin, onSwitchToRegister }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors((prev) => ({\n        ...prev,\n        [name]: \"\",\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.email) {\n      newErrors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = \"Please enter a valid email address\";\n    }\n\n    if (!formData.password) {\n      newErrors.password = \"Password is required\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        email: formData.email.toLowerCase().trim(),\n        password: formData.password,\n      });\n\n      if (response.data.success) {\n        // Store token in localStorage\n        localStorage.setItem(\"authToken\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\n        // Store in sessionStorage if not remembering\n        if (!rememberMe) {\n          sessionStorage.setItem(\"authToken\", response.data.token);\n          sessionStorage.setItem(\"user\", JSON.stringify(response.data.user));\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"user\");\n        }\n\n        onLogin(response.data.user, response.data.token);\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n\n      if (error.response?.data?.errors) {\n        // Handle validation errors\n        const validationErrors = {};\n        error.response.data.errors.forEach((err) => {\n          validationErrors[err.field] = err.message;\n        });\n        setErrors(validationErrors);\n      } else {\n        setErrors({\n          general:\n            error.response?.data?.message || \"Login failed. Please try again.\",\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDemoLogin = async () => {\n    setFormData({\n      email: \"demo@expensetracker.com\",\n      password: \"Demo123!\",\n    });\n\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        email: \"demo@expensetracker.com\",\n        password: \"Demo123!\",\n      });\n\n      if (response.data.success) {\n        localStorage.setItem(\"authToken\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n        onLogin(response.data.user, response.data.token);\n      }\n    } catch (error) {\n      // If demo account doesn't exist, create it\n      try {\n        await axios.post(\"/api/auth/register\", {\n          name: \"Demo User\",\n          email: \"demo@expensetracker.com\",\n          password: \"Demo123!\",\n          confirmPassword: \"Demo123!\",\n          currency: \"USD\",\n        });\n\n        // Now login with the created account\n        const loginResponse = await axios.post(\"/api/auth/login\", {\n          email: \"demo@expensetracker.com\",\n          password: \"Demo123!\",\n        });\n\n        if (loginResponse.data.success) {\n          localStorage.setItem(\"authToken\", loginResponse.data.token);\n          localStorage.setItem(\"user\", JSON.stringify(loginResponse.data.user));\n          onLogin(loginResponse.data.user, loginResponse.data.token);\n        }\n      } catch (createError) {\n        setErrors({\n          general: \"Demo account setup failed. Please try manual registration.\",\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <h1>⚡ Expense Tracker</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\" disabled={loading}>\n            {loading ? \"Logging in...\" : \"Login\"}\n          </button>\n        </form>\n        <p className=\"demo-info\">Demo: test@test.com / test123</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}